--------------------------------------------------------------------------------
-- dbgen/changeset.lua: changeset tools
-- This file is a part of pk-tools library
-- Copyright (c) Alexander Gladysh <ag@logiceditor.com>
-- Copyright (c) Dmitry Potapov <dp@logiceditor.com>
-- See file `COPYRIGHT` for the license
--------------------------------------------------------------------------------

local arguments,
      optional_arguments,
      method_arguments,
      eat_true
      = import 'lua-nucleo/args.lua'
      {
        'arguments',
        'optional_arguments',
        'method_arguments',
        'eat_true'
      }

local assert_is_table,
      assert_is_number,
      assert_is_string,
      assert_is_boolean
      = import 'lua-nucleo/typeassert.lua'
      {
        'assert_is_table',
        'assert_is_number',
        'assert_is_string',
        'assert_is_boolean'
      }

local make_loggers
      = import 'pk-core/log.lua'
      {
        'make_loggers'
      }

--------------------------------------------------------------------------------

local log, dbg, spam, log_error = make_loggers("dbgen/changeset", "DCH")

--------------------------------------------------------------------------------

local format_changeset = function(data)
  local ignore_in_tests = ""
  if assert_is_boolean(data.ignore_in_tests or false) then
    ignore_in_tests = [[
  ignore_in_tests = true;
  --
]]
  end

  return [[
--------------------------------------------------------------------------------
-- WARNING: NEVER CHANGE THIS FILE AFTER IT HAS BEEN PUSHED UPSTREAM!
--------------------------------------------------------------------------------
--
-- Generated by dbgen.lua
--
--------------------------------------------------------------------------------

local DB_NAME = "]] .. assert_is_string(data.DB_NAME) .. [["

local UUID = "]] .. assert_is_string(data.UUID) .. [["

local apply = ]] .. assert_is_string(data.apply) .. [[

local revert = ]] .. assert_is_string(data.revert) .. [[

return
{
]] .. ignore_in_tests .. [[
  DB_NAME = DB_NAME;
  UUID = UUID;
  apply = apply;
  revert = revert;
}
]]
end

--------------------------------------------------------------------------------

return
{
  format_changeset = format_changeset;
}
